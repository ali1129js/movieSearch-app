{"version":3,"sources":["Components/MyModal.js","Components/TitleComponent.js","Components/Search.js","Components/TitleList.js","Components/App.js","serviceWorker.js","index.js"],"names":["Content","styled","div","_templateObject","backdropStyle","position","top","bottom","left","right","backgroundColor","padding","MyModal","props","show","react_default","a","createElement","className","style","onClick","onClose","title","overview","src","concat","backdrop","alt","width","TitleComponent","_useState","useState","_useState2","Object","slicedToArray","isOpen","setModal","handleClicked","Components_MyModal","votes","poster","Search","searchValue","setSearchValue","Fragment","value","onChange","e","target","type","preventDefault","search","results","map","block","Components_TitleComponent","key","id","poster_path","vote_average","backdrop_path","searchResults","TitleList","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadContent","reqUrl","url","process","fetch","then","res","json","data","setState","catch","error","console","state","Component","App","movies","setMovies","Components_Search","response","Components_TitleList","Boolean","window","location","hostname","match","ReactDOM","render","src_Components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bdbbaf99.chunk.js","sourcesContent":["/**\n * @Author: Ali\n * @Date:   2019-03-29T13:28:37+01:00\n * @Last modified by:   Ali\n * @Last modified time: 2019-07-13T12:58:38+02:00\n */\nimport React from \"react\";\nimport styled from \"styled-components\";\nconst Content = styled.div`\n  background: linear-gradient(to bottom right, #3498db, papayawhip, #8e44ad);\n  margin: auto;\n  box-shadow: 10px 10px 10px #2d3436;\n  font-size: 1em;\n  text-align: center;\n  height: 80vh;\n`;\nconst backdropStyle = {\n  position: \"fixed\",\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  backgroundColor: \"#3498db\",\n  padding: 50\n};\nconst MyModal = props => {\n  if (!props.show) {\n    return null;\n  }\n  return (\n    <div className=\"backdrop\" style={backdropStyle}>\n      <div className=\"row\">\n        <div className=\"col-xs-12\">\n          <div className=\"modal-body\">\n            <div className=\"header\">\n              <button className=\"btn btn-outline-dark\" onClick={props.onClose}>\n                Close\n              </button>\n            </div>\n            <Content>\n              {props.title}\n              <p> {props.overview} </p>\n              <img\n                src={`https://image.tmdb.org/t/p/original/${props.backdrop}`}\n                alt={props.title}\n                width=\"50%\"\n              />\n            </Content>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default MyModal;\n","/**\n * @Author: Ali\n * @Date:   2019-03-27T11:49:59+01:00\n * @Last modified by:   Ali\n * @Last modified time: 2019-04-05T18:10:08+02:00\n */\nimport React, { useState } from \"react\";\nimport MyModal from \"./MyModal\";\nconst TitleComponent = props => {\n  const [isOpen, setModal] = useState(false);\n  const handleClicked = () => {\n    setModal(!isOpen);\n  };\n\n  return isOpen ? (\n    <MyModal\n      show={isOpen}\n      onClose={handleClicked}\n      title={props.title}\n      votes={props.votes}\n      overview={props.overview}\n      backdrop={props.backdrop}\n    />\n  ) : (\n    <div className=\"item\" onClick={handleClicked}>\n      <img\n        src={`https://image.tmdb.org/t/p/w500/${props.poster}`}\n        alt={props.title}\n      />\n    </div>\n  );\n};\n\nexport default TitleComponent;\n","/*\n * @Author: Ali\n * @Date:   2019-03-29T08:13:09+01:00\n * @Last modified by:   Ali\n * @Last modified time: 2019-07-14T04:03:08+02:00\n */\nimport React, { useState } from \"react\";\nimport TitleComponent from \"./TitleComponent\";\nconst Search = props => {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const searchResults = () => {\n    if (props.results) {\n      const resVal = props.results.map(block => (\n        <TitleComponent\n          key={block.id}\n          title={block.title}\n          overview={block.overview}\n          poster={block.poster_path}\n          votes={block.vote_average}\n          backdrop={block.backdrop_path}\n        />\n      ));\n      return resVal;\n    }\n  };\n  const handleInputChanges = e => {\n    setSearchValue(e.target.value);\n  };\n  const resetInputField = () => {\n    setSearchValue(\"\");\n  };\n  const callSearchFunction = e => {\n    e.preventDefault();\n    props.search(searchValue);\n    resetInputField();\n  };\n  return (\n    <>\n      <form className=\"search\">\n        <input value={searchValue} onChange={handleInputChanges} type=\"text\" />\n        <input onClick={callSearchFunction} type=\"submit\" value=\"Search\" />\n      </form>\n      <div className=\"row mt-5\">{searchResults()}</div>\n    </>\n  );\n};\nexport default Search;\n","/**\r\n * @Author: Ali\r\n * @Date:   2019-01-14T12:44:56+01:00\r\n * @Last modified by:   Ali\r\n * @Last modified time: 2019-04-05T17:40:36+02:00\r\n */\r\nimport React, { Component } from \"react\";\r\nimport TitleComponent from \"./TitleComponent\";\r\nclass TitleList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    };\r\n  }\r\n  loadContent = () => {\r\n    const reqUrl = `https://api.themoviedb.org/3/${this.props.url}&api_key=${\r\n      process.env.REACT_APP_API_KEY\r\n    }`;\r\n    fetch(reqUrl)\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ data }))\r\n      .catch(error => console.error(\"Something is wrong with fetch\"));\r\n  };\r\n  componentDidMount() {\r\n    this.loadContent();\r\n  }\r\n  render() {\r\n    if (!this.state.data.results) {\r\n      return <div className=\"loading\">loading...</div>;\r\n    } else {\r\n      return (\r\n        <>\r\n          <div className=\"wrapper\">\r\n            <strong> {this.props.title} </strong>\r\n            <div className=\"row\">\r\n              {this.state.data.results.map(block => (\r\n                <TitleComponent\r\n                  key={block.id}\r\n                  title={block.title}\r\n                  overview={block.overview}\r\n                  poster={block.poster_path}\r\n                  votes={block.vote_average}\r\n                  backdrop={block.backdrop_path}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default TitleList;\r\n","/**\n * @Author: Ali\n * @Date:   2019-01-14T12:29:10+01:00\n * @Last modified by:   Ali\n * @Last modified time: 2019-04-05T17:36:31+02:00\n */\nimport React, { useState } from \"react\";\nimport Search from \"./Search\";\nimport TitleList from \"./TitleList\";\nimport \"./App.css\";\n\nconst App = () => {\n  //Hooks\n  const [movies, setMovies] = useState([]);\n  const search = searchValue => {\n    const reqUrl = `https://api.themoviedb.org/3/search/multi?query=${searchValue}&api_key=${\n      process.env.REACT_APP_API_KEY\n    }`;\n    fetch(reqUrl)\n      .then(response => response.json())\n      .then(data => setMovies(data.results));\n  };\n  return (\n    <div className=\"container-fluid\">\n      <Search search={search} results={movies} />\n      <div className=\"row\">\n        <TitleList\n          title=\"Trending now\"\n          url=\"discover/movie?certification_country=US&sort_by=popularity.desc&page=1\"\n        />\n      </div>\n      <div className=\"row\">\n        <TitleList title=\"Top Rated Movies\" url=\"movie/top_rated?\" />\n      </div>\n      <div className=\"row\">\n        <TitleList\n          title=\"Comedy magic\"\n          url=\"genre/35/movies?certification_country=US&sort_by=popularity.desc&page=1\"\n        />\n      </div>\n      <div className=\"row\">\n        <TitleList\n          title=\"Sci-Fi greats\"\n          url=\"genre/878/movies?certification_country=US&sort_by=popularity.desc&page=1\"\n        />\n      </div>\n      <div className=\"row\">\n        <TitleList\n          title=\"Top TV picks\"\n          url=\"genre/27/movies?certification_country=US&sort_by=popularity.desc&page=1\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * @Author: Ali\n * @Date:   2019-01-14T12:47:25+01:00\n * @Last modified by:   Ali\n * @Last modified time: 2019-01-14T17:29:49+01:00\n */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}